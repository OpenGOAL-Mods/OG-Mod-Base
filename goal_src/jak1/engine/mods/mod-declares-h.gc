;;this resets saved chicks in level, ran on run start or new game save
(defun-extern reset-custom-info none)

(defun-extern reset-chicken-targets none)

(defun-extern reset-chicken-targets-all none)

;;this is a bool that checks if we should have zero volume (are we paused etc)
(defun-extern zero-volume? (symbol))

;;If this is true then we force player to fake mort title
(define-extern *in-mort-menu* symbol)

;; just need this early lol
(define-extern *warp-info* (array string))

;; this function runs in main.gc on start push and lets you escape the psuedo mort title
(defun-extern escape-mort-title? symbol)

;; if this symbol is true it forces jak into flutflut mode
(define-extern chicken-mode-on? symbol)

;; this is a function that checks for jak the chicken specific cheats
(defun-extern mort-cheats int)

(define *Origin* (new 'static 'vector :x (meters 32.0085) :y (meters 300.1105) :z (meters 153.0149) :w 1.0))

(define *Origin-R* (new 'static 'vector :x (meters 3.0) :y (meters 3.0) :z (meters 3.0) :w 1.0))

(defun-extern can-we-fly? symbol)

(defun-extern return-hover-animation art-element)

(defun-extern is-in-chem-fac-silo symbol)

(defun-extern run-this-when-cell-grab process-drawable none)

(define *MAXCURRENTCHICKS* 11)

(defun-extern get-current-chicks int)

(defun-extern get-saved-chicks int)

(defun-extern get-waiting-chicks int)

(defun-extern get-to-portal-chicks int)

(defun-extern chicken-going-to-portal? symbol)

(defun-extern get-mort-orb-total int)

(define-extern *mort-orb-total* int)

(declare-type basebutton process-drawable)

(defun-extern portal-mort-switch basebutton)

(define-extern *has-landed?* symbol)

(defun-extern run-mort-code? basic)

(define-extern done-init? symbol)

(defun-extern draw-origin-sphere-text vector string none)

(defun-extern get-chick-from-state process)

(define-extern *seen-all-orbs-display* symbol)

(define-extern *heard-chem-hint* symbol)

(defun-extern get-chicken-initial-return-point vector)

(defun-extern waiting-chicks-proc-func none)

(declare-type demon-chicken process-drawable)

(define *target-chicken* (the-as demon-chicken #f))

(define *draw-chicken-pool* #f)

(define *show-target-chicken-info* #f)
