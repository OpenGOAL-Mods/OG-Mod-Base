;;-*-Lisp-*-
(in-package goal)

;; name: mod-common-functions.gc
;; name in dgo: mod-common-functions
;; dgos: TODO

;;;;;;;;;;;;;;;;;;;;;;;;;;
;; What is this file for.
;;;;;;;;;;;;;;;;;;;;;;;;;;

#|
 This file is a place where you can define custom functions and GOAL code
 to call inside of mod-custom-code.gc for example I have defined a function that increases
 the powercell count by one when it is called
|#

;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Useful GOAL modding documentation
;;;;;;;;;;;;;;;;;;;;;;;;;;

#|
Checks the condition and if it is true it does first argument if false it does optional second argument
(if (condition) (do if true) (do if false))

Gives a random FLOAT or INT between the provided ranges when called
(rand-vu-float-range 0.0 2.0)
(rand-vu-int-range 0 10)

if the result of rand-vu-int-range is 1, then DANCE! if it is not 1, then Don't dance
(if (= (rand-vu-int-range 0 10) 1) (DANCE!) (Don't dance))
|#

;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Define Settings to use in mods
;;;;;;;;;;;;;;;;;;;;;;;;;;

(define *valid-for-runs* #t)

(define *debug-continue-point* "coins-warp")

(define *draw-warp-gate-pos* #f)

(define *draw-chicken-information* #t)

;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Define Custom Settings Variables to use in mods
;;;;;;;;;;;;;;;;;;;;;;;;;;

;; Change #f to #t here to remove flutflut's invisible walls and prevent deload crashes
(define *allow-flutflut-anywhere* #f)

;; Change #f to #t here to remove zoomer's invisible walls and prevent deload crashes
(define *allow-zoomer-anywhere* #f)

;; Change #f to #t here to show the input display by default
(define *show-input-display* #f)

;; do NOT change %MODVERSIONPLACEHOLDER% below, otherwise the mod-bundling-tools
;;   will be unable to automatically add version info to the speedrun display
(define *mod-version-text* "")

(defconstant NUM_FLOCKPOINTS 12)

(define *custom-cutscene?* #t)

(define *currentCutsceneFrame* 0)

(define *currentSpoolName* "")

(define mort-level? #f)

(define *in-mort-menu* #f)

(define *has-chicken-eco* #f)

(define *custom-music-eco-paused?* #f)

(define-extern *show-debug* symbol)

(define *old-voice-volume* 0.0)

(defun-extern init-chickens (none))

(defconstant ORANGE_DEMON_DEBUG #f)

(defconstant NOTICE_DIST (meters 10000))

(defconstant STOP_CHASE_DIST (meters 100000))

(define *sphere-color* (new 'static 'rgba :r #xff :g #xff :b #xff :a #x80))

(deftype level-information (structure)
  ((name           string)
   (total-chicks   int32)
   (current-chicks int32)
   (saved-chicks   int32)))

(deftype custom-level-info (structure)
  ((data level-information 47 :inline :offset-assert 0)))

(define *custom-level-info* (new 'static 'custom-level-info))

(set! (-> *custom-level-info* data 16 total-chicks) 6)

(set! (-> *custom-level-info* data 17 total-chicks) 6)

(set! (-> *custom-level-info* data 18 total-chicks) 6)

(set! (-> *custom-level-info* data 19 total-chicks) 9)

(set! (-> *custom-level-info* data 20 total-chicks) 10)

(set! (-> *custom-level-info* data 21 total-chicks) 10)

(set! (-> *custom-level-info* data 22 total-chicks) 9)

(set! (-> *custom-level-info* data 23 total-chicks) 1)

(set! (-> *custom-level-info* data 24 total-chicks) 10)

(set! (-> *custom-level-info* data 25 total-chicks) 6)

(set! (-> *custom-level-info* data 26 total-chicks) 6)

(set! (-> *custom-level-info* data 26 total-chicks) 5)

(set! (-> *custom-level-info* data 27 total-chicks) 10)

(set! (-> *custom-level-info* data 28 total-chicks) 6)

(set! (-> *custom-level-info* data 29 total-chicks) 6)

(set! (-> *custom-level-info* data 30 total-chicks) 36)

(set! (-> *custom-level-info* data 30 total-chicks) 32)

(set! (-> *custom-level-info* data 31 total-chicks) 10)

(set! (-> *custom-level-info* data 32 total-chicks) 6)

(set! (-> *custom-level-info* data 33 total-chicks) 12)

(set! (-> *custom-level-info* data 34 total-chicks) 12)

(activate-big-collide-cache!)
